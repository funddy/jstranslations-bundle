// Generated by CoffeeScript 1.4.0
(function() {

  describe("IntervalSymbol", function() {
    var leftIntervalSymbol, rightIntervalSymbol;
    leftIntervalSymbol = new FUNDDY.JsTranslations.IntervalSymbol("[");
    rightIntervalSymbol = new FUNDDY.JsTranslations.IntervalSymbol("]");
    describe("#constructor()", function() {
      return it("throws exception when symbol is not recognized", function() {
        return expect(function() {
          return new FUNDDY.JsTranslations.IntervalSymbol("");
        }).to.throwError();
      });
    });
    describe("#isLeftOpen()", function() {
      it("returns false when symbol is type left", function() {
        return expect(leftIntervalSymbol.isLeftOpen()).not.to.be.ok();
      });
      return it("returns true when symbol is type right", function() {
        return expect(rightIntervalSymbol.isLeftOpen()).to.be.ok();
      });
    });
    describe("#isLeftClose()", function() {
      it("returns true when symbol is type left", function() {
        return expect(leftIntervalSymbol.isLeftClose()).to.be.ok();
      });
      return it("returns false when symbol is type right", function() {
        return expect(rightIntervalSymbol.isLeftClose()).not.to.be.ok();
      });
    });
    describe("#isRightOpen()", function() {
      it("returns true when symbol is type left", function() {
        return expect(leftIntervalSymbol.isRightOpen()).to.be.ok();
      });
      return it("returns false when symbol is type right", function() {
        return expect(rightIntervalSymbol.isRightOpen()).not.to.be.ok();
      });
    });
    return describe("#isRightClose()", function() {
      it("returns false when symbol is type left", function() {
        return expect(leftIntervalSymbol.isRightClose()).not.to.be.ok();
      });
      return it("returns true when symbol is type right", function() {
        return expect(rightIntervalSymbol.isRightClose()).to.be.ok();
      });
    });
  });

}).call(this);
